import type { MyContext } from '../../types';
import { safeEditText } from '../telegram';

export async function renderLoading(ctx: MyContext, text = '‚è≥ –°–æ—Ö—Ä–∞–Ω—è—é...') {
  ctx.session.ui.state = 'loading';
  ctx.session.ui.errorMessage = undefined;
  await safeEditText(ctx, text);
}

export async function renderError(
  ctx: MyContext,
  message = '‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.',
  retryCb = 'retry:last',
) {
  ctx.session.ui.state = 'error';
  ctx.session.ui.errorMessage = message;
  await safeEditText(ctx, message, {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üîÅ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å', callback_data: retryCb }],
        [{ text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data: 'mode:preset' }],
      ],
    },
  });
}

export function clearState(ctx: MyContext) {
  ctx.session.ui = { state: 'idle' };
}
